name: Send Daily AI News Email

on:
  schedule:
    # 每天00:30 UTC (对应北京时间08:30)
    - cron: '30 0 * * *'
  workflow_dispatch:  # 允许手动触发

jobs:
  send-email:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        
    - name: Install dependencies
      run: |
        npm install nodemailer
        
    - name: Create email script
      run: |
        cat > send-daily-email.js << 'EOF'
        const nodemailer = require('nodemailer');
        const fs = require('fs');
        const path = require('path');

        // 邮件配置
        const EMAIL_CONFIG = {
          host: 'smtp.qq.com',
          port: 587,
          secure: false,
          auth: {
            user: '3497181457@qq.com',
            pass: process.env.EMAIL_PASSWORD || 'regtopndvdricidf'
          }
        };

        // 创建邮件传输器
        const transporter = nodemailer.createTransporter(EMAIL_CONFIG);

        // 读取新闻数据
        function loadNewsData() {
          try {
            const dataPath = path.join(__dirname, 'public/mock-data/ai-news.json');
            const newsDataFile = JSON.parse(fs.readFileSync(dataPath, 'utf8'));
            return newsDataFile.data || [];
          } catch (error) {
            console.error('读取新闻数据失败:', error.message);
            return [];
          }
        }

        // 格式化邮件内容
        function formatEmailContent(newsData) {
          const today = new Date().toISOString().split('T')[0];
          const todayNews = newsData.filter(item => {
            const itemDate = new Date(item.publishTime).toISOString().split('T')[0];
            return itemDate === today;
          });

          // 如果今天没有新闻，获取最新一天的新闻
          let targetNews = todayNews;
          let targetDate = today;
          let isToday = true;

          if (todayNews.length === 0 && newsData.length > 0) {
            const sortedNews = newsData.sort((a, b) => new Date(b.publishTime) - new Date(a.publishTime));
            const latestDate = new Date(sortedNews[0].publishTime).toISOString().split('T')[0];
            
            targetNews = newsData.filter(item => {
              const itemDate = new Date(item.publishTime).toISOString().split('T')[0];
              return itemDate === latestDate;
            });
            
            targetDate = latestDate;
            isToday = false;
          }

          const totalCount = newsData.length;
          const todayCount = todayNews.length;
          const targetCount = targetNews.length;
          const updateTime = new Date().toLocaleString('zh-CN', {
            timeZone: 'Asia/Shanghai',
            year: 'numeric',
            month: '2-digit',
            day: '2-digit',
            hour: '2-digit',
            minute: '2-digit'
          });

          let emailContent = `
            <!DOCTYPE html>
            <html>
            <head>
              <meta charset="UTF-8">
              <title>AI资讯助手 - ${isToday ? '今日' : '最新'}资讯</title>
              <style>
                body { font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, sans-serif; line-height: 1.6; color: #333; max-width: 600px; margin: 0 auto; padding: 20px; }
                .header { background: linear-gradient(135deg, #4285F4, #34A853); color: white; padding: 30px; border-radius: 10px; text-align: center; margin-bottom: 30px; }
                .stats { background: #f8f9fa; padding: 20px; border-radius: 8px; margin-bottom: 30px; }
                .news-item { background: white; border: 1px solid #e1e8ed; border-radius: 8px; padding: 20px; margin-bottom: 20px; }
                .news-title { font-size: 18px; font-weight: bold; color: #1a73e8; margin-bottom: 10px; }
                .news-summary { color: #5f6368; margin-bottom: 10px; }
                .news-meta { font-size: 12px; color: #9aa0a6; }
                .footer { text-align: center; color: #9aa0a6; margin-top: 30px; padding-top: 20px; border-top: 1px solid #e1e8ed; }
              </style>
            </head>
            <body>
              <div class="header">
                <h1>🤖 AI资讯助手 - ${isToday ? '今日' : '最新'}资讯</h1>
                <p>每日AI资讯，实时更新</p>
              </div>
              
              <div class="stats">
                <h2>📊 数据统计</h2>
                <ul>
                  <li>• 总资讯：${totalCount}篇</li>
                  <li>• 今日新增：${todayCount}篇</li>
                  <li>• ${isToday ? '今日' : '最新'}推送：${targetCount}篇</li>
                  <li>• 更新时间：${updateTime}</li>
                </ul>
              </div>
          `;

          if (targetCount > 0) {
            const dateStr = isToday ? '今日' : new Date(targetDate).toLocaleDateString('zh-CN');
            emailContent += `
              <h2 style="color: #2c3e50; margin-bottom: 20px;">🔥 ${isToday ? '今日' : dateStr}资讯 (${targetCount}篇)</h2>
            `;
            
            targetNews.slice(0, 10).forEach(item => {
              const publishTime = new Date(item.publishTime).toLocaleString('zh-CN', {
                month: '2-digit',
                day: '2-digit',
                hour: '2-digit',
                minute: '2-digit',
              });

              emailContent += `
                <div class="news-item">
                  <div class="news-title">${item.title}</div>
                  <div class="news-summary">${item.summary || item.content?.substring(0, 150) + '...' || '暂无摘要'}</div>
                  <div class="news-meta">
                    📅 ${publishTime} | 🏷️ ${item.category || '未分类'} | 📰 ${item.source || 'AI资讯'}
                  </div>
                </div>
              `;
            });
          } else {
            emailContent += `
              <div class="news-item">
                <div class="news-title">📭 暂无新资讯</div>
                <div class="news-summary">今日暂无新的AI资讯更新，请继续关注。</div>
              </div>
            `;
          }

          emailContent += `
              <div class="footer">
                <p>🤖 由AI资讯助手自动发送</p>
                <p>🌐 访问网站: <a href="https://xianyu110.github.io/ai-news-assistant/">AI News Assistant</a></p>
                <p>📧 如需退订，请回复"退订"</p>
              </div>
            </body>
            </html>
          `;

          return emailContent;
        }

        // 发送邮件
        async function sendEmail() {
          try {
            console.log('📧 开始发送每日AI新闻邮件...');
            
            const newsData = loadNewsData();
            if (newsData.length === 0) {
              console.log('❌ 无新闻数据，跳过发送');
              return;
            }

            const emailContent = formatEmailContent(newsData);
            const today = new Date().toLocaleDateString('zh-CN');
            
            const todayNews = newsData.filter(item => {
              const itemDate = new Date(item.publishTime).toISOString().split('T')[0];
              return itemDate === new Date().toISOString().split('T')[0];
            });
            
            const subjectPrefix = todayNews.length > 0 ? '今日资讯' : '最新资讯';
            
            const mailOptions = {
              from: {
                name: 'AI资讯助手',
                address: EMAIL_CONFIG.auth.user
              },
              to: '1002569303@qq.com',
              subject: `🤖 AI资讯助手 - ${subjectPrefix} (${today})`,
              html: emailContent
            };

            const result = await transporter.sendMail(mailOptions);
            
            console.log('✅ 邮件发送成功!');
            console.log('📧 邮件ID:', result.messageId);
            console.log('📮 发送到: 1002569303@qq.com');
            console.log('📰 新闻数量:', newsData.length);
            
          } catch (error) {
            console.error('❌ 邮件发送失败:', error.message);
            process.exit(1);
          }
        }

        // 执行发送
        sendEmail();
        EOF
        
    - name: Send email
      run: node send-daily-email.js
      env:
        EMAIL_PASSWORD: ${{ secrets.EMAIL_PASSWORD }}
        
    - name: Cleanup
      run: rm -f send-daily-email.js